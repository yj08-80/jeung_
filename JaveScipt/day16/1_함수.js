/*
[ 함수 , function ]
    1. 정의 : 특정한 {}안에 미리 정의된 코드
        함(상자/공간/블럭) , 수(숫자/코드/명령어)
    2. 주목적 : 미리 정의된 코드를 재사용
        - 변수 : 값/데이터를 저장해서 재사용  ( 객체명.이름 ) : 자료 호출
        - 반복문 : 특정한 패턴(조건)에 따른 코드 반복/재사용
        - 함수 : 미리 정의된 코드에 따른 코드 반복   ( 객체명.이름() ) : 함수 호출
    3. 함수 종류
        (1) 라이브러리 : 미리 만들어진 함수
            console.log(), document.write(), .push(), .splice() 등등
        (2) 정의함수 : 내가(개발자) 만든 함수 , < 정의, 사용 >

    4. 함수도 js에서는 *자료형*
    5. js함수 표현 방법 
        1.선언적 함수 : 선언 키워드 이용하여 함수를 만드는 방법, function 함수명( ){  }
        2.익명 함수 : 함수명 없이 정의하는 방법 , function( ){ }
        3.화살표(람다식) 함수 : 선언 키워드와 함수명 없이 정의하는 방법, ( ) => { }
    
    6.함수 만드는 방법
        1.function : 함수를 선언(만들기) 하기 위한 키워드
        2.함수명     : 변수명과 동일하게 카멜표기법 권장
        3.()       : 매개변수 (함수 안으로 들어오는 데이터를 저장하는 변수)
                     인수 : 들어가는 수 , 인자값 : 들어온 수
        4.{}       : 함수가 실행될 때 처리 되늰 명령어들
        5.return   : 함수가 종료되면서 함수를 호출했던 곳으로 반환되는 값 , 리턴값/반환값/응답값
        6. 함수 호출/사용하는 방법
            -함수명();
            - 함수명( 인수1, 인수2 ); : ,(쉼표) 구분하여 정해진 매개변수를 호출
*/
//[1]함수 만들기
function 내가만든함수(){
    console.log( "내가 처음 만든 함수" );
} // fun end
//[2]함수 호출하기
내가만든함수();
//[3]간단한 함수 예시
console.log( 2 + 3 );
console.log( 6 + 7 );
console.log( 1 + 5 );
console.log( 5 + 6 );
console.log( 7 + 3 );
console.log( 9 + 7 ); // 임의값들을 6번을 더하기 하여 출력한다.
// 반복문을 사용하기에는 패턴이 없음 -> for문은 사용 불가
// 함수로 표현
function 더하기함수( x , y ){ // 매개변수 : x랑 y 변수를 중매(연결)
    console.log( x + y );
    return 10; // 리턴값 : 함수 종료시 반환되는 값, 필수는 아님, 값은 무조건 1개만 반환
} // func end
//함수 호출
더하기함수( 2 , 3 ); // x에 2를 중매하고, y에 3을 중매한다.
더하기함수( 6 , 7 ); // x에 6을 중매하고, y에 7을 중매한다.
더하기함수( 1 , 5 ); // 이런식


//[1]변수 선언
let a = 3 ;
a; // 변수 호출

//[4]믹서기 함수 : *믹서기 : 과일을 갈아서 주스 반환한다.
function 믹서기함수( 들어오는과일명 ){
    let 믹서결과 = 들어오는과일명 + "주스";
    return 믹서결과;
}
let 컵 = 믹서기함수( 사과 );
console.log( 컵1 );

//console.log -> log() 출력 후 반환되는 값이 없으므로
//let a = prompt(); -> prompt 실행 후 반환되는 값이 있으므로
